//
// Arduino library for controlling TI's TLC59711
//
// copyright 2016 by Ulrich Stern
// 21 Feb 2016 by Ulrich Stern
//
// open source (see LICENSE file)
//
// notes:
// * the library's Wiki on GitHub has a comparison with the Adafruit_TLC59711
//  library and various other info
//

#ifndef TLC59711_H_
#define TLC59711_H_

#include <Arduino.h>

class Tlc59711 {
 public:
  // object default state: (matches reset())
  // - all grayscale (PWM) values 0
  // - all brightness values 127 (maximum)
  explicit Tlc59711(uint16_t numTlc, uint8_t clkPin = 13, uint8_t dataPin = 11);

  ~Tlc59711();

  // select data transfer mode
  // * beginFast():
  //  - use hardware support (SPI library)
  //  - default: 10 MHz SPI clock (TLC59711 datasheet value)
  // * beginSlow():
  //  - use software (shiftOut(), which is digitalWrite()-based)
  // * if this library is NOT used on an Arduino Uno or with 10 MHz,
  //  postXferDelayMicros possibly needs to be adjusted; see write()
  //  implementation and the library's GitHub Wiki for details
  void beginFast(bool bufferXfer = true, uint32_t spiClock = 10000000,
    unsigned int postXferDelayMicros = 4);
  void beginSlow(unsigned int postXferDelayMicros = 200,
    bool interrupts = false);
  // control of TMGRST bit
  // * separate from begin() functions to reduce their parameters
  // * side effect: resets all brightness values to maximum (127)
  void setTmgrst(bool val = true);

  // the following functions affect the state of this object only (the data
  // is transferred to the chip when write() is called)
  // * index order follows the datasheet
  //   (note: chip 1 is the one directly connected to Arduino)
  //  - channel: 0:R0 (chip 1), 1:G0, ..., 12:R0 (chip 2), ...
  //  - RGB/LED: 0:R0,G0,B0 (chip 1), ..., 4:R0,G0,B0 (chip 2), ...
  //  - tlcIdx: 0:chip 1, 1:chip 2, ...
  // * functions without index set values for all chips and LEDs
  // * brightness values (bcr, bcg, bcb) must be 0-127
  void setChannel(uint16_t idx, uint16_t val);
  void setRGB(uint16_t idx, uint16_t r, uint16_t g, uint16_t b);
  void setRGB(uint16_t r = 0, uint16_t g = 0, uint16_t b = 0);
  void setLED(uint16_t idx, uint16_t r, uint16_t g, uint16_t b) {
    setRGB(idx, r, g, b);
  }
  uint16_t getChannel(uint16_t idx);
  // setLED() is convenience function to allow faster testing/porting of
  // code using Adafruit_TLC59711; the index order for multiple chips is
  // different here, however, and chip 1 has the smallest indices

  void setBrightness(uint16_t tlcIdx, uint8_t bcr, uint8_t bcg, uint8_t bcb);
  void setBrightness(uint8_t bcr = 127, uint8_t bcg = 127, uint8_t bcb = 127);
  void reset() {
    setRGB();
    setBrightness();
  }

  // transfer data to TLC59711; will work only after a call to beginFast() or
  // beginSlow()
  void write();

  // stop using this library
  void end();

 private:
  // const uint16_t idx_lookup;
  const uint16_t numTlc, bufferSz;
  const uint8_t clkPin, dataPin;
  uint16_t *buffer, *buffer2;
  bool beginCalled;
  uint8_t fc;
  bool useSpi_, bufferXfer_, noInterrupts;
  unsigned int postXferDelayMicros_;

  void begin(bool useSpi, unsigned int postXferDelayMicros);
  void xferSpi();
  void xferSpi16();
  void xferShiftOut();
};


// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// generate lookup table at compile time
// base on
// Generating lookup table at compile time using features from C++14
// https://www.avrfreaks.net/comment/2292631#comment-2292631

// We need to return an array, which is not possible in C/C++
// So we return a structure that contains the array.
// this also allows reading from flash memory using normal array notation
template <uint16_t N>
struct ProgmemArray {
    uint16_t _[N];

    uint16_t operator[] (uint16_t index) const {
        // bound check
        if (index < N) {
            return pgm_read_word(&_[0] + index);
        } else {
            return 0;
        }
    }
};
// usage like normal array:
// idx_lookup_table[i]

// This function returns an ProgmemArray structure
// filled with the idx mapping.
// Since it is defined as constexpr, the compiler knows that the result
// of the function can be determined at compile time.
// No actual AVR code is generated, just data.
template <uint16_t N>
constexpr ProgmemArray<N> idx_lookup_generator() {
    ProgmemArray<N> tmp {};
    for (uint16_t idx = 0; idx < N; idx++) {
        tmp._[idx] = (14 * (idx / 12) + idx % 12);
    }
    return tmp;
}


// Fill flash memory with the idx lookup table
// maximum elements is 56173 (as this translates to 65535)
// 600ch = 50TCL's
// static const uint16_t idx_lookup_table_count = 600;
// 1200ch = 100TCL's
// static const uint16_t idx_lookup_table_count = 1200;
// 1800ch = 150TCL's
// static const uint16_t idx_lookup_table_count = 1800;
// 2400ch = 200TCL's
static const uint16_t idx_lookup_table_count = 2400;
// generated table
const PROGMEM ProgmemArray<idx_lookup_table_count> idx_lookup_table =
    idx_lookup_generator<idx_lookup_table_count>();
// hardcoded table
// static const PROGMEM ProgmemArray<idx_lookup_table_count> idx_lookup_table = {
//     // 0
//     0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
//     14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
//     28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
//     42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
//     56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
//     70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
//     84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95,
//     98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
//     112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
//     126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
//     140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
//     154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
//     168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
//     182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
//     196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
//     210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
//     224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235,
//     238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
//     252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263,
//     266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277,
//     280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291,
//     294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305,
//     308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
//     322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333,
//     336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347,
//     350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361,
//     364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375,
//     378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389,
//     392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403,
//     406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
//     420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
//     434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
//     448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
//     462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
//     476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
//     490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
//     504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
//     518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
//     532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
//     546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
//     560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
//     574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
//     588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
//     602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
//     616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
//     630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
//     644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
//     658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
//     672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683,
//     686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
//     // 600
//     700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711,
//     714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
//     728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
//     742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
//     756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
//     770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
//     784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795,
//     798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809,
//     812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823,
//     826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
//     840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
//     854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
//     868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
//     882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893,
//     896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
//     910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921,
//     924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935,
//     938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949,
//     952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963,
//     966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
//     980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
//     994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
//     1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
//     1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
//     1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
//     1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
//     1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
//     1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089,
//     1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103,
//     1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117,
//     1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131,
//     1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
//     1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
//     1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
//     1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
//     1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
//     1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
//     1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229,
//     1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
//     1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
//     1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
//     1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
//     1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
//     1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
//     1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
//     1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
//     1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355,
//     1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
//     1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
//     1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
//     // 1200
//     1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
//     1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
//     1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
//     1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
//     1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
//     1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
//     1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
//     1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
//     1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
//     1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
//     1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
//     1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
//     1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
//     1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
//     1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
//     1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
//     1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
//     1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
//     1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
//     1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
//     1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
//     1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
//     1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
//     1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
//     1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
//     1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761,
//     1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
//     1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
//     1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
//     1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817,
//     1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
//     1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845,
//     1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
//     1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
//     1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887,
//     1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901,
//     1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915,
//     1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
//     1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
//     1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957,
//     1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971,
//     1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985,
//     1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
//     2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
//     2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027,
//     2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041,
//     2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
//     2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
//     2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
//     2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
//     // 1800
//     2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111,
//     2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
//     2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
//     2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
//     2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
//     2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181,
//     2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195,
//     2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209,
//     2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
//     2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237,
//     2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
//     2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
//     2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279,
//     2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293,
//     2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307,
//     2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321,
//     2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
//     2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349,
//     2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363,
//     2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
//     2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
//     2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
//     2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419,
//     2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433,
//     2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
//     2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
//     2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475,
//     2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489,
//     2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
//     2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
//     2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
//     2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545,
//     2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
//     2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573,
//     2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
//     2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601,
//     2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615,
//     2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629,
//     2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643,
//     2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657,
//     2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
//     2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
//     2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
//     2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713,
//     2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727,
//     2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741,
//     2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755,
//     2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769,
//     2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783,
//     2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797,
// };


#endif  // TLC59711_H_
